import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';
import { useLanguage } from './language-provider';
import { Shield, Copy, Check, Download, Key, Lock } from 'lucide-react';
import { useState } from 'react';

interface AlphaG8IdDisplayModalProps {
  isOpen: boolean;
  onClose: () => void;
  alphaG8Id: string;
  userEmail: string;
  userName: string;
  userRole: string;
}

export function AlphaG8IdDisplayModal({ 
  isOpen, 
  onClose, 
  alphaG8Id, 
  userEmail, 
  userName,
  userRole 
}: AlphaG8IdDisplayModalProps) {
  const { t } = useLanguage();
  const [copied, setCopied] = useState(false);

  const copyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(alphaG8Id);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (error) {
      console.error('Failed to copy:', error);
    }
  };

  const downloadIdKey = () => {
    const content = `
ALPHAG8 ID KEY - Digital Identity Certificate
================================================

ID KEY: ${alphaG8Id}
Name: ${userName}
Email: ${userEmail}
Role: ${userRole}
Issue Date: ${new Date().toLocaleDateString()}
Valid Until: ${new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toLocaleDateString()}

SECURITY NOTICE:
- Keep this ID KEY secure and confidential
- Required for CO₂ certification applications
- Protected by Swiss banking-level encryption
- Contact support@fagri.digital for assistance

Generated by FAGRI Digital Platform
Powered by ALPHAG8 Switzerland Technology
================================================
    `;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `FAGRI-ID-KEY-${alphaG8Id}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl bg-white">
        <DialogHeader className="pb-6">
          <div className="flex items-center space-x-3 mb-4">
            <div className="p-3 bg-green-100 rounded-lg">
              <Shield className="h-8 w-8 text-green-700" />
            </div>
            <div>
              <DialogTitle className="text-2xl font-light text-slate-900">
                {t('alphag8-id-generated')}
              </DialogTitle>
              <p className="text-slate-600 font-light">
                {t('id-key-ready-desc')}
              </p>
            </div>
          </div>
        </DialogHeader>

        <div className="space-y-6">
          {/* Success Message */}
          <Card className="border-green-200 bg-green-50">
            <CardContent className="pt-6">
              <div className="flex items-center space-x-3">
                <Check className="h-6 w-6 text-green-600" />
                <div>
                  <h3 className="font-semibold text-green-800">
                    {t('registration-successful')}
                  </h3>
                  <p className="text-green-700 font-light">
                    {t('verification-complete-desc')}
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* ID KEY Display */}
          <Card className="border-blue-200 bg-blue-50">
            <CardHeader>
              <CardTitle className="text-blue-800 flex items-center space-x-2">
                <Key className="h-5 w-5" />
                <span>{t('your-alphag8-id-key')}</span>
              </CardTitle>
              <CardDescription className="text-blue-700">
                {t('id-key-access-desc')}
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              {/* ID KEY */}
              <div className="p-4 bg-white border-2 border-blue-300 rounded-lg">
                <div className="flex items-center justify-between">
                  <div className="flex-1">
                    <p className="text-sm text-blue-600 font-medium mb-1">
                      {t('alphag8-id-key')}
                    </p>
                    <p className="text-xl font-mono font-bold text-blue-900 tracking-wider">
                      {alphaG8Id}
                    </p>
                  </div>
                  <Button
                    onClick={copyToClipboard}
                    variant="outline"
                    size="sm"
                    className="ml-4 border-blue-300 text-blue-700 hover:bg-blue-100"
                  >
                    {copied ? <Check className="h-4 w-4" /> : <Copy className="h-4 w-4" />}
                    {copied ? t('copied') : t('copy')}
                  </Button>
                </div>
              </div>

              {/* User Information */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('name')}</p>
                  <p className="text-blue-900 font-semibold">{userName}</p>
                </div>
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('email')}</p>
                  <p className="text-blue-900 font-semibold">{userEmail}</p>
                </div>
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('role')}</p>
                  <Badge variant="secondary" className="bg-blue-100 text-blue-800">
                    {userRole}
                  </Badge>
                </div>
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('issue-date')}</p>
                  <p className="text-blue-900 font-semibold">
                    {new Date().toLocaleDateString()}
                  </p>
                </div>
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('valid-until')}</p>
                  <p className="text-emerald-700 font-bold">
                    {new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toLocaleDateString()}
                  </p>
                </div>
                <div>
                  <p className="text-sm text-blue-600 font-medium">{t('validity-period')}</p>
                  <Badge variant="secondary" className="bg-emerald-100 text-emerald-800 font-semibold">
                    {t('one-year-valid')}
                  </Badge>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Security Information */}
          <Card className="border-amber-200 bg-amber-50">
            <CardContent className="pt-6">
              <div className="flex items-start space-x-3">
                <Lock className="h-6 w-6 text-amber-600 mt-0.5" />
                <div>
                  <h3 className="font-semibold text-amber-800">{t('security-notice')}</h3>
                  <ul className="text-amber-700 font-light mt-2 space-y-1">
                    <li>• {t('keep-id-secure')}</li>
                    <li>• {t('required-for-co2-apps')}</li>
                    <li>• {t('swiss-encryption-protected')}</li>
                    <li>• {t('contact-support-help')}</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row gap-3 pt-4">
            <Button
              onClick={downloadIdKey}
              className="flex-1 bg-blue-700 hover:bg-blue-800 text-white py-3"
            >
              <Download className="h-4 w-4 mr-2" />
              {t('download-id-certificate')}
            </Button>
            
            <Button
              onClick={copyToClipboard}
              variant="outline"
              className="flex-1 border-blue-300 text-blue-700 hover:bg-blue-50 py-3"
            >
              <Copy className="h-4 w-4 mr-2" />
              {t('copy-id-key')}
            </Button>
            
            <Button
              onClick={onClose}
              variant="outline"
              className="flex-1 border-slate-300 text-slate-700 hover:bg-slate-50 py-3"
            >
              {t('close')}
            </Button>
          </div>

          {/* Next Steps */}
          <Card className="border-emerald-200 bg-emerald-50">
            <CardContent className="pt-6">
              <h3 className="font-semibold text-emerald-800 mb-2">{t('next-steps')}</h3>
              <p className="text-emerald-700 font-light">
                {t('next-steps-desc')}
              </p>
            </CardContent>
          </Card>
        </div>
      </DialogContent>
    </Dialog>
  );
}